{"ast":null,"code":"var _jsxFileName = \"/Users/andreybern/Study/JavaScript/autocheck/src/s2-homeworks/hw01/message/Message.tsx\";\nimport React from 'react';\nimport s from './Message.module.css'; // нужно создать правильный тип вместо any\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// нужно отобразить приходящие данные\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw1-message-' + props.message.id,\n    className: s.message,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.imageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.avatar,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: 'hw1-avatar-' + props.message.id // создаёт студент\n          ,\n          src: props.message.user.avatar //\n          ,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'hw1-time-' + props.message.id,\n          className: s.time,\n          children: props.message.message.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.text,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'hw1-name-' + props.message.id,\n          className: s.name,\n          children: props.message.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: 'hw1-text-' + props.message.id,\n          className: s.messageText,\n          children: props.message.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","s","Message","props","message","id","imageAndText","avatar","user","time","text","name","messageText"],"sources":["/Users/andreybern/Study/JavaScript/autocheck/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from 'react'\nimport s from './Message.module.css'\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: meaasgeProps\n}\ntype meaasgeProps = {\n    id: number,\n    user: userPropsType,\n    message: messagePropsType\n}\ntype userPropsType = {\n    avatar: string,\n    name: string\n}\ntype messagePropsType = {\n    text: string,\n    time: string\n}\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <div className={s.avatar}>\n                    <img\n                        id={'hw1-avatar-' + props.message.id}\n                        // создаёт студент\n                        src={props.message.user.avatar}\n                        //\n                        alt='avatar'\n                    />\n                    <div id={'hw1-time-' + props.message.id} className={s.time}>\n                        {/*создаёт студент*/}\n                        {props.message.message.time}\n                        {/**/}\n                    </div>\n                </div>\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd,C,CAEA;;;;AAkBA;AACA,MAAMC,OAAO,GAAIC,KAAD,IAA6B;EACzC,oBACI;IAAK,EAAE,EAAE,iBAAiBA,KAAK,CAACC,OAAN,CAAcC,EAAxC;IAA4C,SAAS,EAAEJ,CAAC,CAACG,OAAzD;IAAA,uBACI;MAAK,SAAS,EAAEH,CAAC,CAACK,YAAlB;MAAA,wBACI;QAAK,SAAS,EAAEL,CAAC,CAACM,MAAlB;QAAA,wBACI;UACI,EAAE,EAAE,gBAAgBJ,KAAK,CAACC,OAAN,CAAcC,EADtC,CAEI;UAFJ;UAGI,GAAG,EAAEF,KAAK,CAACC,OAAN,CAAcI,IAAd,CAAmBD,MAH5B,CAII;UAJJ;UAKI,GAAG,EAAC;QALR;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAK,EAAE,EAAE,cAAcJ,KAAK,CAACC,OAAN,CAAcC,EAArC;UAAyC,SAAS,EAAEJ,CAAC,CAACQ,IAAtD;UAAA,UAEKN,KAAK,CAACC,OAAN,CAAcA,OAAd,CAAsBK;QAF3B;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAeI;QAAK,SAAS,EAAER,CAAC,CAACS,IAAlB;QAAA,wBACI;UAAK,EAAE,EAAE,cAAcP,KAAK,CAACC,OAAN,CAAcC,EAArC;UAAyC,SAAS,EAAEJ,CAAC,CAACU,IAAtD;UAAA,UAEKR,KAAK,CAACC,OAAN,CAAcI,IAAd,CAAmBG;QAFxB;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAK,EAAE,EAAE,cAAcR,KAAK,CAACC,OAAN,CAAcC,EAArC;UAAyC,SAAS,EAAEJ,CAAC,CAACW,WAAtD;UAAA,UAEKT,KAAK,CAACC,OAAN,CAAcA,OAAd,CAAsBM;QAF3B;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH,CAlCD;;KAAMR,O;AAoCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}